Changelog V0.2
- Adjusted `findMaximumRangePower()` to accept a bird object as input instead of a function of speed. The function still works as V0.1, when first argument (bird) is a function of speed.
- Adjusted `findMaximumRangePower()` such that `lower` and `upper` are no longer required (function estimates bounds internally)
- Adjusted `findMaximumRangePower()` to use `air2ground()` for calculating ground speed.
- Adjusted `findMinimumPowerSpeed()` to accept a bird object as input instead of a function of speed. The function still works as V0.1, when first argument (bird) is a function of speed.
- Adjusted `findMinimumPowerSpeed()` such that `lower` and `upper` are no longer required (function estimates bounds internally)
- Adjusted `findMaximumClimbRate()` to accept a bird object as input instead of a function of climb angle. The function now also takes `speed` as an argument. If no speed provided, it will optimize flight speed for maximum climb rate. It is still possible to provide a function object as first argument, but this needs to be a function `function(climbAngle,speed)...`.
- Created functions `mech2chem()` and `chem2mech()` for converting mechanical power to chemical power and vice versa respectively. `computeChemicalPower()` now uses `mech2chem()`.
- Adjusted `air2ground()` to return NA for impossible combinations of `airSpeed`, `windSpeed` and `windDir` instead of returning a warning.
- Adjusted `findMaximumRangePower()` to better handle high wind conditions. The lower search bound is automatically adjusted to the lowest possible airspeed to give a solution, such that `fminbnd()` will no longer return an error for non-existent solutions. The upper bound is ensured to be at least twice the wind speed. If the optimization still converges on the upper bound, the function self iterates while raising the bounds.
- changed name of `estimateBodyFrontalArea()` to `computeBodyFrontalArea()`
- changed name of `findMaximumRangePower()` to `findMaximumRangeSpeed()`
- implemented internal handling of multiple birds for `computeFlappingPower()`; added `bird.name` as output varible
- implemented internal handling of multiple birds for `findMaximumClimbRate()`;
- implemented internal handling of multiple birds for `findMaximumPowerSpeed()`;
- removed dependency on pracma package (used the equivalent uniroot() and optimize() functions from the stats package)
